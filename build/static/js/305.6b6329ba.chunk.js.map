{"version":3,"file":"static/js/305.6b6329ba.chunk.js","mappings":"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","sources":["app/reducers/addPokemonToList.ts","components/CompareContainer.tsx","pages/Compare.tsx","sections/Wrapper.tsx"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { addDoc } from \"firebase/firestore\";\nimport { pokemonListRef } from \"../../utils/firebaseConfig\";\nimport { getUserPokemons } from \"./getUserPokemons\";\nimport { setToast } from \"../slices/AppSlice\";\nimport {\n  pokemonStatsType,\n  pokemonTypeInterface,\n  userPokemonsType,\n} from \"../../utils/types\";\nimport { RootState } from \"../store\";\n\nexport const addPokemonToList = createAsyncThunk(\n  \"pokemon/addPkemon\",\n  async (\n    pokemon: {\n      id: number;\n      name: string;\n      types: pokemonTypeInterface[] | string[];\n      stats?: pokemonStatsType[];\n    },\n    { getState, dispatch }\n  ) => {\n    try {\n      const {\n        app: { userInfo },\n        pokemon: { userPokemons },\n      } = getState() as RootState;\n      if (!userInfo?.email) {\n        return dispatch(\n          setToast(\"Faça login para adicionar Pokémon à sua coleção.\")\n        );\n      }\n      const index = userPokemons.findIndex((userPokemon: userPokemonsType) => {\n        return userPokemon.name === pokemon.name;\n      });\n      if (index === -1) {\n        let types: string[] = [];\n        if (!pokemon.stats) {\n          pokemon.types.forEach((type: any) =>\n            types.push(Object.keys(type).toString())\n          );\n        } else {\n          types = pokemon.types as string[];\n        }\n        await addDoc(pokemonListRef, {\n          pokemon: { id: pokemon.id, name: pokemon.name, types },\n          email: userInfo.email,\n        });\n        await dispatch(getUserPokemons());\n        dispatch(setToast(`${pokemon.name} adicionado à sua coleção.`));\n      } else {\n        dispatch(setToast(`${pokemon.name} já faz parte da sua coleção.`));\n      }\n    } catch (err) {\n      console.log({ err });\n    }\n  }\n);\n","import React from \"react\";\nimport { FaPlus } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\nimport { removeFromCompare } from \"../app/slices/PokemonSlice\";\nimport { useAppDispatch } from \"../app/hooks\";\nimport { addPokemonToList } from \"../app/reducers/addPokemonToList\";\nimport { pokemonTypes } from \"../utils\";\nimport {\n  pokemonStatType,\n  pokemonTypeInterface,\n  userPokemonsType,\n} from \"../utils/types\";\nfunction CompareContainer({\n  pokemon = undefined,\n  isEmpty = false,\n}: {\n  pokemon?: userPokemonsType;\n  isEmpty?: boolean;\n}) {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const createStatsArray = (\n    types: pokemonTypeInterface[],\n    statType: pokemonStatType\n  ) => {\n    const statsArray: { name: string; image: string }[] = [];\n    const statsSet = new Set<string>();\n    types.forEach((type: pokemonTypeInterface) => {\n      const key = Object.keys(type)[0];\n      type[key][statType].forEach((stat: string) => {\n        if (!statsSet.has(stat)) {\n          // @ts-ignore\n          statsArray.push({ name: stat, image: pokemonTypes[stat].image });\n          statsSet.add(stat);\n        }\n      });\n    });\n    return statsArray;\n  };\n  const getStats = () => {\n    return (\n      <>\n        <div className=\"pokemon-types\">\n          <h4 className=\"pokemon-type-title\">Força</h4>\n          <div className=\"pokemon-type-icons\">\n            {createStatsArray(pokemon?.types!, \"strength\").map(\n              (stat: { image: string }) => (\n                <div className=\"pokemon-type\">\n                  <img src={stat.image} alt=\"\" className=\"pokemon-type-image\" />\n                </div>\n              )\n            )}\n          </div>\n        </div>\n        <div className=\"pokemon-types\">\n          <h4 className=\"pokemon-type-title\">Fraqueza</h4>\n          <div className=\"pokemon-type-icons\">\n            {createStatsArray(pokemon?.types!, \"weakness\").map(\n              (stat: { image: string }) => (\n                <div className=\"pokemon-type\">\n                  <img src={stat.image} alt=\"\" className=\"pokemon-type-image\" />\n                </div>\n              )\n            )}\n          </div>\n        </div>\n        <div className=\"pokemon-types\">\n          <h4 className=\"pokemon-type-title\">Resistência</h4>\n          <div className=\"pokemon-type-icons\">\n            {createStatsArray(pokemon?.types!, \"resistance\").map(\n              (stat: { image: string }) => (\n                <div className=\"pokemon-type\">\n                  <img src={stat.image} alt=\"\" className=\"pokemon-type-image\" />\n                </div>\n              )\n            )}\n          </div>\n        </div>\n        <div className=\"pokemon-types\">\n          <h4 className=\"pokemon-type-title\">Vulnerável</h4>\n          <div className=\"pokemon-type-icons\">\n            {createStatsArray(pokemon?.types!, \"vulnerable\").map(\n              (stat: { image: string }) => (\n                <div className=\"pokemon-type\">\n                  <img src={stat.image} alt=\"\" className=\"pokemon-type-image\" />\n                </div>\n              )\n            )}\n          </div>\n        </div>\n      </>\n    );\n  };\n  return (\n    <div className=\"compare-container\">\n      {isEmpty && (\n        <div className=\"empty\">\n          <button onClick={() => navigate(\"/search\")}>\n            <FaPlus />\n          </button>\n          <h3>Adicionar Pokémon</h3>\n        </div>\n      )}\n      {pokemon && (\n        <div className=\"compare-element\" key={pokemon?.id}>\n          <div className=\"compare-info\">\n            <div className=\"compare-details\">\n              <h3>{pokemon?.name}</h3>\n              <img\n                src={pokemon?.image}\n                alt=\"pokemon\"\n                className=\"compare-image\"\n              />\n            </div>\n            <div className=\"pokemon-types-container\">\n              <div className=\"pokemon-types\">\n                <h4 className=\"pokemon-type-title\">Tipo</h4>\n                <div className=\"pokemon-type-icons\">\n                  {pokemon?.types.map((type: pokemonTypeInterface) => {\n                    const keys = Object.keys(type);\n                    return (\n                      <div className=\"pokemon-type\">\n                        <img\n                          src={type[keys[0]].image}\n                          alt=\"pokemon type\"\n                          className=\"pokemon-type-image\"\n                          loading=\"lazy\"\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n              {getStats()}\n            </div>\n          </div>\n          <div className=\"compare-action-buttons\">\n            <button\n              className=\"compare-btn\"\n              onClick={() => {\n                dispatch(addPokemonToList(pokemon));\n              }}\n            >\n              Adiconar\n            </button>\n            <button\n              className=\"compare-btn\"\n              onClick={() => navigate(`/pokemon/${pokemon?.id}`)}\n            >\n              Visualizar\n            </button>\n            <button\n              className=\"compare-btn\"\n              onClick={() => dispatch(removeFromCompare({ id: pokemon?.id }))}\n            >\n              Remover\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default CompareContainer;\n","import React from \"react\";\nimport Wrapper from \"../sections/Wrapper\";\nimport CompareContainer from \"../components/CompareContainer\";\nimport { useAppSelector } from \"../app/hooks\";\n\nfunction Compare() {\n  const { compareQueue } = useAppSelector(({ pokemon }) => pokemon);\n  return (\n    <div className=\"compare\">\n      <CompareContainer\n        pokemon={compareQueue[0]}\n        isEmpty={compareQueue.length < 1}\n      />\n      <CompareContainer\n        pokemon={compareQueue[1]}\n        isEmpty={compareQueue.length < 2}\n      />\n    </div>\n  );\n}\n\nexport default Wrapper(Compare);\n","import React from \"react\";\n\nconst Wrapper = (Component: React.FC) => () => {\n  return (\n    <div className=\"content\">\n      <Component />\n    </div>\n  );\n};\n\nexport default Wrapper;\n"],"names":["addPokemonToList","createAsyncThunk","pokemon","getState","dispatch","userInfo","app","userPokemons","email","setToast","findIndex","userPokemon","name","types","stats","forEach","type","push","Object","keys","toString","addDoc","pokemonListRef","id","getUserPokemons","console","log","err","undefined","isEmpty","navigate","useNavigate","useAppDispatch","createStatsArray","statType","statsArray","statsSet","Set","stat","has","image","pokemonTypes","add","className","onClick","src","alt","map","loading","removeFromCompare","Wrapper","compareQueue","useAppSelector","length","Component"],"sourceRoot":""}